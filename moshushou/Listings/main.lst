C51 COMPILER V9.55   MAIN                                                                  06/12/2020 17:42:36 PAGE 1   


C51 COMPILER V9.55, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: E:\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main.lst) TA
                    -BS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          /*************************************************************************************
   2          程序介绍
   3          名称：基于三个超声波避障器的避障小车程序（待定）
   4          功能：实现小车的避障
   5          核心原理：三个超声波依次检测距离并分别储存在s1,s2,s3三个值中
   6                    通过对三个值的情况与预设情况进行一一比较，符合则执
   7                    行相应的运动，不符合则停止运动并发出警报，可以以此
   8                    为依据修改程序。
   9          *************************************************************************************/
  10          
  11          
  12          #include"reg51.h"
  13          #include"intrins.h"
  14          typedef unsigned char u8;//之所以用8 是因为他正好有8个字节下面的同理
  15          typedef unsigned int u16;//重新定义 用u8 u16 来代替原来的符号 
  16          u16 i=1,h=0;//定义全局变量
  17          float s,s1,s2,s3;
  18          u16 pwm=1100,juli=20;//调节pwm周期和检测距离
  19          sbit AIN1=P1^0;//后面两个轮子
  20          sbit AIN2=P1^1;
  21          sbit AIN3=P1^2;
  22          sbit AIN4=P1^3;
  23          sbit AENA=P1^4;
  24          sbit AENB=P1^5;
  25          sbit BIN1=P0^0;//前面两个轮子
  26          sbit BIN2=P0^1;
  27          sbit BIN3=P0^2;
  28          sbit BIN4=P0^3;
  29          sbit BENA=P0^4;
  30          sbit BENB=P0^5;
  31          sbit TRIG1=P3^3; //避障使用
  32          sbit ECHO1=P3^2; //
  33          sbit TRIG2=P0^6; //
  34          sbit ECHO2=P0^7; //
  35          sbit TRIG3=P2^7; //
  36          sbit ECHO3=P2^6;
  37          sbit FMQ=P1^6;
  38          
  39          
  40          
  41          /*
  42          void delay(u16 z) //秒延时函数
  43          {
  44            u16 j,k;
  45            for(j=z;j>0;j--)
  46               for(k=110;k>0;k--);
  47          }
  48          */
  49          
  50          
  51          void delayus(u16 x) //us延时函数
  52          
  53          {
  54   1      
C51 COMPILER V9.55   MAIN                                                                  06/12/2020 17:42:36 PAGE 2   

  55   1      while(x--);
  56   1      
  57   1      }
  58          
  59          
  60          void init()//避障定时器初始化函数
  61          {
  62   1        TMOD|=0X11; //T0 为方式1, GATE=1;
  63   1        TH0=0;
  64   1        TL0=0;  
  65   1        EA=1; 
  66   1        ET0=1;
  67   1        TR0=0;
  68   1        TRIG1=0;
  69   1        TRIG2=0;
  70   1        TRIG3=0;
  71   1      
  72   1      }
  73          
  74          
  75          void  StartModule1()       //启动避障1
  76          {
  77   1          TRIG1=1; 
  78   1          _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); //这个函数为标准的延时1us的函数
  79   1          _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); //他在头文件为"intrins.h"里面
  80   1          _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); 
  81   1          _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); 
  82   1          _nop_();
  83   1          TRIG1=0;
  84   1      }
  85          
  86          void  StartModule2()       //启动避障2
  87          {
  88   1          TRIG2=1;
  89   1          _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); 
  90   1          _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); 
  91   1          _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); 
  92   1          _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); 
  93   1          _nop_();
  94   1          TRIG2=0; 
  95   1      }
  96          
  97          void  StartModule3()       //启动避障3
  98          {
  99   1          TRIG3=1;
 100   1          _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); 
 101   1          _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); 
 102   1          _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); 
 103   1          _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); 
 104   1          _nop_();
 105   1          TRIG3=0;
 106   1      }
 107          
 108          
 109          void Conut(void) //计算距离 单位cm
 110          { 
 111   1        u16 time;
 112   1        time=TH0*256+TL0;
 113   1        TH0=0;
 114   1        TL0=0;
 115   1        s=(time*1.7)/100;
 116   1      }
C51 COMPILER V9.55   MAIN                                                                  06/12/2020 17:42:36 PAGE 3   

 117          
 118          
 119          void ceju()
 120          {    
 121   1            switch(i)
 122   1            {
 123   2              case 1:StartModule1();break; 
 124   2              case 2:StartModule2();break; 
 125   2              case 3:StartModule3();break; 
 126   2            }
 127   1            switch(i)                       //当ECHO为零时等待
 128   1            {
 129   2              case 1:while(!ECHO1);break; 
 130   2              case 2:while(!ECHO2);break; 
 131   2              case 3:while(!ECHO3);break; 
 132   2            }
 133   1            //while(!ECHO1||!ECHO2||!ECHO3); 
 134   1            TR0=1; //开始计数
 135   1            switch(i)                      //当ECHO为1时计数并等待
 136   1            {
 137   2              case 1:while(ECHO1);break; 
 138   2              case 2:while(ECHO2);break; 
 139   2              case 3:while(ECHO3);break; 
 140   2            }
 141   1            //while(ECHO1||ECHO2||ECHO3); 
 142   1            TR0=0; //停止计数
 143   1            Conut(); //测距
 144   1            TH0=0;   //清零准备下一次计数
 145   1            TL0=0; 
 146   1            switch(i)
 147   1            {
 148   2              case 1:s1=s;i++;break; 
 149   2              case 2:s2=s;i++;break; 
 150   2              case 3:s3=s;i=1;break; 
 151   2            }
 152   1      } 
 153          
 154          void zz()
 155          {
 156   1          BIN1=0; //1 反转
 157   1          BIN2=1;
 158   1          BIN3=0; //2 正
 159   1          BIN4=1;
 160   1          AIN3=0; //3 反转
 161   1          AIN4=1;
 162   1          AIN1=0; //4 正转
 163   1          AIN2=1;
 164   1      }
 165          
 166          void yz()
 167          {
 168   1          BIN1=1; 
 169   1          BIN2=0;
 170   1          BIN3=1; 
 171   1          BIN4=0;
 172   1          AIN3=1; 
 173   1          AIN4=0;
 174   1          AIN1=1; 
 175   1          AIN2=0;
 176   1      }
 177          
 178          void zhizou()
C51 COMPILER V9.55   MAIN                                                                  06/12/2020 17:42:36 PAGE 4   

 179          {
 180   1          BIN1=1; 
 181   1          BIN2=0;
 182   1          BIN3=0; 
 183   1          BIN4=1;
 184   1          AIN3=1; 
 185   1          AIN4=0;
 186   1          AIN1=0; 
 187   1          AIN2=1;
 188   1      }
 189          
 190          void houtui()
 191          {
 192   1          BIN1=0; 
 193   1          BIN2=1;
 194   1          BIN3=1; 
 195   1          BIN4=0;
 196   1          AIN3=0; 
 197   1          AIN4=1;
 198   1          AIN1=1; 
 199   1          AIN2=0;
 200   1      }
 201          //四个轮子的PWM调速函数依次如下
 202          void yido(u16 x1)//前左轮
 203          {
 204   1          BENA=1;
 205   1          BENB=1;
 206   1          AENB=1;
 207   1          AENA=1;
 208   1          delayus(x1);//置高电平后延时x1us 占空比为x1%100 即  x1/pwm*%100     
 209   1          BENA=0;
 210   1          BENB=0;
 211   1          AENB=0; 
 212   1          AENA=0;
 213   1          //delayus(pwm-x1);
 214   1      }
 215          
 216          void tingzhi()
 217          {
 218   1          BIN1=1; 
 219   1          BIN2=1;
 220   1          BIN3=1; 
 221   1          BIN4=1;
 222   1          AIN3=1; 
 223   1          AIN4=1;
 224   1          AIN1=1; 
 225   1          AIN2=1;
 226   1      }
 227          
 228          
 229          void bizhang()//对s1 s2 s3的值进行对号入座  然后执行相应的运动情况。
 230          {
 231   1        /*
 232   1        if(s1>juli&&s2>juli&&s3>juli)//s1为正面s2为左面s3为右面
 233   1        {
 234   1          if(h==0)
 235   1          {
 236   1           FMQ=1;    //直走
 237   1           yido(1000);
 238   1           zhizou();
 239   1          }
 240   1          else
C51 COMPILER V9.55   MAIN                                                                  06/12/2020 17:42:36 PAGE 5   

 241   1          {
 242   1           FMQ=0;         //向右转90度
 243   1           yido(1000);
 244   1           yz();
 245   1           h=0;
 246   1          }     
 247   1        }
 248   1        else if(s1<=juli&&s2>juli&&s3>juli)  
 249   1        {
 250   1          FMQ=0;         //向右转
 251   1          yido(1000);
 252   1          yz();
 253   1        }
 254   1        else if(s2<=juli&&s1>juli&&s3>juli)
 255   1        {
 256   1          FMQ=0;       //向右转
 257   1          yido(1000);
 258   1          yz();
 259   1          h=0;
 260   1        }
 261   1        else if(s3<=juli&&s1>juli&&s2>juli)
 262   1        {
 263   1          FMQ=0;      //向左转
 264   1          yido(1000);
 265   1          zz();
 266   1          h=0;
 267   1        }
 268   1        else if(s1<=juli&&s2<=juli&&s3>juli)
 269   1        {
 270   1          FMQ=0;       //向右转
 271   1          yido(1000);
 272   1          yz();
 273   1        }
 274   1        else if(s1<=juli&&s3<=juli&&s2>juli)
 275   1        {
 276   1          FMQ=0;      //向左转
 277   1          yido(1000);
 278   1          zz();
 279   1        }
 280   1        else if(s1>juli&&s2<=juli&&s3<=juli)//这个情况有问题
 281   1        {
 282   1          if(h==0)
 283   1          {
 284   1            FMQ=0;      //减速向前
 285   1            yido(1000);
 286   1            zhizou();
 287   1          }
 288   1          else
 289   1          {
 290   1            FMQ=0;       //加速后退
 291   1            yido(1000);
 292   1            houtui();
 293   1          }
 294   1          
 295   1        }
 296   1        else if(s1<=juli&&s2<=juli&&s3<=juli)
 297   1        { 
 298   1          //delay_ms(1);
 299   1          h=0;
 300   1          FMQ=0;       //加速后退
 301   1          yido(1000);
 302   1          houtui();
C51 COMPILER V9.55   MAIN                                                                  06/12/2020 17:42:36 PAGE 6   

 303   1          h++;
 304   1        }
 305   1        else
 306   1        {
 307   1          FMQ=0;      //停止
 308   1          yido(0);
 309   1          zhizou();
 310   1        }
 311   1      */
 312   1        if(s1<=juli&&s2>juli&&s3>juli)//s1为正面s2为左面s3为右面
 313   1        {
 314   2          
 315   2           yido(1000);
 316   2           zhizou();
 317   2          }
 318   1        if(s1>juli&&s2<juli&&s3>juli)
 319   1          {
 320   2            yido(1000);
 321   2            zz();
 322   2          } 
 323   1        if(s1>juli&&s2>juli&&s3<juli)
 324   1        {
 325   2            yido(1000);
 326   2          yz();
 327   2        }
 328   1      }
 329          
 330          
 331          void main()
 332          {
 333   1        init();//避障用定时器初始化 
 334   1        while(1)
 335   1        {  
 336   2           ceju();      //开始测距
 337   2           ceju();
 338   2           ceju();
 339   2           bizhang();       //进行避障   
 340   2        }
 341   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    694    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     24    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
