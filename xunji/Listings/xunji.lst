C51 COMPILER V9.55   XUNJI                                                                 05/30/2020 18:27:30 PAGE 1   


C51 COMPILER V9.55, COMPILATION OF MODULE XUNJI
OBJECT MODULE PLACED IN .\Objects\xunji.obj
COMPILER INVOKED BY: E:\C51\BIN\C51.EXE xunji.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\xunji.lst) 
                    -TABS(2) OBJECT(.\Objects\xunji.obj)

line level    source

   1          /*************************************************************************************
   2          程序介绍
   3          名称：基于五路循迹的循迹程序（待定）
   4          功能：实现小车的循迹
   5          核心原理：根据五路循迹检测到的黑白线来反馈高低电压，并及时
   6                    作出反应，来根据具体路线来实现循迹。
   7          *************************************************************************************/
   8          
   9          
  10          #include"reg51.h"
  11          #include"intrins.h"
  12          typedef unsigned char u8;//之所以用8 是因为他正好有8个字节下面的同理
  13          typedef unsigned int u16;//重新定义 用u8 u16 来代替原来的符号 
  14          u16 timer1,value1,value2,value3,value4,i=1,h=0;//定义全局变量
  15          float s,s1,s2,s3;
  16          
  17          
  18          sbit AIN1=P1^0;//后面两个轮子
  19          sbit AIN2=P1^1;
  20          sbit AIN3=P1^2;
  21          sbit AIN4=P1^3;
  22          sbit AENA=P1^4;
  23          sbit AENB=P1^5;
  24          sbit BIN1=P0^0;//前面两个轮子
  25          sbit BIN2=P0^1;
  26          sbit BIN3=P0^2;
  27          sbit BIN4=P0^3;
  28          sbit BENA=P0^4;
  29          sbit BENB=P0^5;
  30          sbit TRIG1=P3^3; //避障使用
  31          sbit ECHO1=P3^2; //
  32          sbit TRIG2=P0^6; //
  33          sbit ECHO2=P0^7; //
  34          sbit TRIG3=P2^7; //
  35          sbit ECHO3=P2^6;
  36          sbit FMQ=P1^6;
  37          
  38          /*void delay_ms(u16 n)//微妙延时函数
  39          {
  40            u16 y;   //可以实现输入相应数字得到相应的延时
  41            for(;n>0;n--)     //单位ms
  42            {
  43              for(y=110;y>0;y--);
  44            }
  45          }
  46          void delay(u16 z) //秒延时函数
  47          {
  48            u16 j,k;
  49            for(j=z;j>0;j--)
  50               for(k=110;k>0;k--);
  51          }
  52          */
  53          
  54          
C51 COMPILER V9.55   XUNJI                                                                 05/30/2020 18:27:30 PAGE 2   

  55          //定时器初始化函数
  56          void Timer1Init()
  57          {
  58   1        TMOD|=0X11;//选择为定时器1模式，工作方式1，仅用TR1打开启动。
  59   1      
  60   1        TH1 = 0xFF; 
  61   1        TL1 = 0xce;   //1ms
  62   1          
  63   1        ET1=1;//打开定时器1中断允许
  64   1        EA=1;//打开总中断
  65   1        TR1=1;//打开定时器      
  66   1      }
  67          
  68          
  69          void init()//避障定时器初始化函数
  70          {
  71   1        TMOD|=0X11; //T0 为方式1, GATE=1;
  72   1        TH0=0;
  73   1        TL0=0;  
  74   1        EA=1; 
  75   1        ET0=1;
  76   1        TR0=0;
  77   1        TRIG1=0;
  78   1        TRIG2=0;
  79   1        TRIG3=0;
  80   1      
  81   1      }
  82          
  83          
  84          void  StartModule1()       //启动避障1
  85          {
  86   1          TRIG1=1; 
  87   1          _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); //这个函数为标准的延时1us的函数
  88   1          _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); //他在头文件为"intrins.h"里面
  89   1          _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); 
  90   1          _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); 
  91   1          _nop_();
  92   1          TRIG1=0;
  93   1      }
  94          
  95          void  StartModule2()       //启动避障2
  96          {
  97   1          TRIG2=1;
  98   1          _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); 
  99   1          _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); 
 100   1          _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); 
 101   1          _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); 
 102   1          _nop_();
 103   1          TRIG2=0; 
 104   1      }
 105          
 106          void  StartModule3()       //启动避障3
 107          {
 108   1          TRIG3=1;
 109   1          _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); 
 110   1          _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); 
 111   1          _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); 
 112   1          _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); 
 113   1          _nop_();
 114   1          TRIG3=0;
 115   1      }
 116          
C51 COMPILER V9.55   XUNJI                                                                 05/30/2020 18:27:30 PAGE 3   

 117          
 118          void Conut(void) //计算距离 单位cm
 119          { 
 120   1        u16 time;
 121   1        time=TH0*256+TL0;
 122   1        TH0=0;
 123   1        TL0=0;
 124   1        s=(time*1.7)/100;
 125   1      }
 126          
 127          
 128          void ceju()
 129          {    
 130   1            switch(i)
 131   1            {
 132   2              case 1:StartModule1();break; 
 133   2              case 2:StartModule2();break; 
 134   2              case 3:StartModule3();break; 
 135   2            }
 136   1            switch(i)                       //当ECHO为零时等待
 137   1            {
 138   2              case 1:while(!ECHO1);break; 
 139   2              case 2:while(!ECHO2);break; 
 140   2              case 3:while(!ECHO3);break; 
 141   2            }
 142   1            //while(!ECHO1||!ECHO2||!ECHO3); 
 143   1            TR0=1; //开始计数
 144   1            switch(i)                      //当ECHO为1时计数并等待
 145   1            {
 146   2              case 1:while(ECHO1);break; 
 147   2              case 2:while(ECHO2);break; 
 148   2              case 3:while(ECHO3);break; 
 149   2            }
 150   1            //while(ECHO1||ECHO2||ECHO3); 
 151   1            TR0=0; //停止计数
 152   1            Conut(); //测距
 153   1            TH0=0;   //清零准备下一次计数
 154   1            TL0=0; 
 155   1            switch(i)
 156   1            {
 157   2              case 1:s1=s;i++;break; 
 158   2              case 2:s2=s;i++;break; 
 159   2              case 3:s3=s;i=1;break; 
 160   2            }
 161   1      } 
 162          
 163          
 164          //四个轮子的PWM调速函数依次如下
 165          void qz(u16 x1,u16 zx1)//前左轮
 166          {
 167   1           value1=x1;
 168   1           if(timer1>1800)  //PWM周期为1000*1us
 169   1          {
 170   2            timer1=0;
 171   2          }
 172   1          if(timer1 <value1)  //value为调节占空比用的C值
 173   1          {
 174   2            BENA=1;
 175   2          }
 176   1          else
 177   1          {
 178   2            BENA=0;
C51 COMPILER V9.55   XUNJI                                                                 05/30/2020 18:27:30 PAGE 4   

 179   2          }   
 180   1          if(zx1==1)//为一则正转
 181   1          {
 182   2            BIN1=1; //左前 正转
 183   2            BIN2=0;
 184   2          }
 185   1          else
 186   1          {
 187   2            BIN1=0; //左前 反转
 188   2            BIN2=1;
 189   2          }
 190   1      }
 191          
 192          void qy(u16 x2,u16 zx2)//前右轮
 193          {
 194   1           value2=x2;
 195   1           if(timer1>1800)  //PWM周期为1000*1us
 196   1          {
 197   2            timer1=0;
 198   2          }
 199   1          if(timer1 <value2)  //value为调节占空比用的C值
 200   1          {
 201   2            BENB=1;
 202   2          }
 203   1          else
 204   1          {
 205   2            BENB=0;
 206   2          } 
 207   1          if(zx2==1)//为一则正转
 208   1          {
 209   2            BIN3=0; // 正转
 210   2            BIN4=1;
 211   2          }
 212   1          else
 213   1          {
 214   2            BIN3=1; // 反转
 215   2            BIN4=0;
 216   2          }   
 217   1      }
 218          
 219          void hz(u16 x3,u16 zx3)//后左
 220          {
 221   1           value3=x3;
 222   1           if(timer1>1800)  //PWM周期为1000*1us
 223   1          {
 224   2            timer1=0;
 225   2          }
 226   1          if(timer1 <value3)  //value为调节占空比用的C值
 227   1          {
 228   2            AENB=1;
 229   2          }
 230   1          else
 231   1          {
 232   2            AENB=0;
 233   2          } 
 234   1          if(zx3==1)//为一则正转
 235   1          {
 236   2            AIN3=1; // 正转
 237   2            AIN4=0;
 238   2          }
 239   1          else
 240   1          {
C51 COMPILER V9.55   XUNJI                                                                 05/30/2020 18:27:30 PAGE 5   

 241   2            AIN3=0; // 反转
 242   2            AIN4=1;
 243   2          }   
 244   1      }
 245          
 246          void hy(u16 x4,u16 zx4)//后右
 247          {
 248   1           value4=x4;
 249   1           if(timer1>1800)  //PWM周期为1000*1us
 250   1          {
 251   2            timer1=0;
 252   2          }
 253   1          if(timer1 <value4)  //value为调节占空比用的C值
 254   1          {
 255   2            AENA=1;
 256   2          }
 257   1          else
 258   1          {
 259   2            AENA=0;
 260   2          }
 261   1          if(zx4==1)//为一则正转
 262   1          {
 263   2            AIN1=0; // 正转
 264   2            AIN2=1;
 265   2          }
 266   1          else
 267   1          {
 268   2            AIN1=1; // 反转
 269   2            AIN2=0;
 270   2          }   
 271   1      }
 272          
 273          void bizhang()//对s1 s2 s3的值进行对号入座  然后执行相应的运动情况。
 274          {
 275   1        if(s1>50&&s2>50&&s3>50)//s1为正面s2为左面s3为右面
 276   1        {
 277   2          if(h==0)
 278   2          {
 279   3           FMQ=1;    //直走
 280   3           qz(500,1);//对四个函数赋值可以实现四个轮子的单独调速和正反转
 281   3           qy(500,1);
 282   3           hz(500,1);
 283   3           hy(500,1);
 284   3          }
 285   2          else
 286   2          {
 287   3           FMQ=0;         //向右转90度
 288   3           qz(700,1);//对四个函数赋值可以实现四个轮子的单独调速和正反转
 289   3           qy(700,0);
 290   3           hz(700,1);
 291   3           hy(700,0);
 292   3           h=0;
 293   3          }     
 294   2        }
 295   1        else if(s1<=50&&s2>50&&s3>50)  
 296   1        {
 297   2          FMQ=0;         //向右转
 298   2          qz(500,1);//对四个函数赋值可以实现四个轮子的单独调速和正反转
 299   2          qy(500,0);
 300   2          hz(500,1);
 301   2          hy(500,0);
 302   2        }
C51 COMPILER V9.55   XUNJI                                                                 05/30/2020 18:27:30 PAGE 6   

 303   1        else if(s2<=50&&s1>50&&s3>50)
 304   1        {
 305   2          FMQ=0;       //向右转
 306   2          qz(500,1);//对四个函数赋值可以实现四个轮子的单独调速和正反转
 307   2          qy(500,0);
 308   2          hz(500,1);
 309   2          hy(500,0);
 310   2          h=0;
 311   2        }
 312   1        else if(s3<=50&&s1>50&&s2>50)
 313   1        {
 314   2          FMQ=0;      //向左转
 315   2          qz(500,1);//对四个函数赋值可以实现四个轮子的单独调速和正反转
 316   2          qy(500,0);
 317   2          hz(500,1);
 318   2          hy(500,0);
 319   2          h=0;
 320   2        }
 321   1        else if(s1<=50&&s2<=50&&s3>50)
 322   1        {
 323   2          FMQ=0;       //向右转
 324   2          qz(500,1);//对四个函数赋值可以实现四个轮子的单独调速和正反转
 325   2          qy(500,0);
 326   2          hz(500,1);
 327   2          hy(500,0);
 328   2        }
 329   1        else if(s1<=50&&s3<=50&&s2>50)
 330   1        {
 331   2          FMQ=0;      //向左转
 332   2          qz(500,0);//对四个函数赋值可以实现四个轮子的单独调速和正反转
 333   2          qy(500,1);
 334   2          hz(500,0);
 335   2          hy(500,1);
 336   2        }
 337   1        /*else if(s1>50&&s2<=50&&s3<=50)//这个情况有问题
 338   1        {
 339   1          if(h==0)
 340   1          {
 341   1            FMQ=0;      //减速向前
 342   1            qz(300,0);//对四个函数赋值可以实现四个轮子的单独调速和正反转
 343   1            qy(300,0);
 344   1            hz(300,0);
 345   1            hy(300,0);
 346   1          }
 347   1          else
 348   1          {
 349   1            FMQ=0;       //加速后退
 350   1            qz(600,0);//对四个函数赋值可以实现四个轮子的单独调速和正反转
 351   1            qy(600,0);
 352   1            hz(600,0);
 353   1            hy(600,0);
 354   1          }
 355   1          
 356   1        }*/
 357   1        else if(s1<=50&&s2<=50&&s3<=50)
 358   1        { 
 359   2          h=0;
 360   2          FMQ=0;       //加速后退
 361   2          qz(600,0);//对四个函数赋值可以实现四个轮子的单独调速和正反转
 362   2          qy(600,0);
 363   2          hz(600,0);
 364   2          hy(600,0);
C51 COMPILER V9.55   XUNJI                                                                 05/30/2020 18:27:30 PAGE 7   

 365   2          h++;
 366   2        }
 367   1        else
 368   1        {
 369   2          FMQ=0;      //停止
 370   2          qz(0,1);//对四个函数赋值可以实现四个轮子的单独调速和正反转
 371   2          qy(0,1);
 372   2          hz(0,1);
 373   2          hy(0,1);
 374   2          
 375   2        }
 376   1      
 377   1      }
 378          
 379          
 380          void main()
 381          {
 382   1        init();//避障用定时器初始化
 383   1        Timer1Init();//调速用定时器初始化
 384   1        
 385   1        while(1)
 386   1        {
 387   2      
 388   2           ceju();      //开始测距
 389   2           ceju();
 390   2           ceju();
 391   2           bizhang();       //进行避障
 392   2       
 393   2        }
 394   1      }
 395          
 396          
 397          //中断函数
 398          void Time1(void) interrupt 3    //3 为定时器1的中断号  1 定时器0的中断号 0 外部中断1 2 外部中断2  4 串口中
             -断
 399          {
 400   1        TH1 = 0xFF; 
 401   1        TL1 = 0xce;   //1ms
 402   1        timer1++;   
 403   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1237    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     30    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
